-- Variáveis para o jogador e o personagem
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")

-- A função para encontrar o inimigo mais próximo
local function findClosestEnemy()
    local closestEnemy = nil
    local closestDistance = math.huge
    
    for _, obj in pairs(game.Workspace:GetChildren()) do
        -- Verifique se o objeto é um inimigo válido.
        -- Ajuste o nome "Enemy" para o nome ou tag dos mobs no seu jogo.
        if obj:IsA("Model") and obj.Name == "Enemy" and obj:FindFirstChild("HumanoidRootPart") then
            local enemyRootPart = obj.HumanoidRootPart
            local distance = (rootPart.Position - enemyRootPart.Position).Magnitude
            
            if distance < closestDistance then
                closestDistance = distance
                closestEnemy = obj
            end
        end
    end
    
    return closestEnemy
end

-- Esta é a sua função principal que agora executa o "voo" e o ataque
local function attackClosestEnemy()
    local enemy = findClosestEnemy() -- Encontra o inimigo mais próximo
    
    if enemy then
        local enemyRootPart = enemy:FindFirstChild("HumanoidRootPart")
        if enemyRootPart then
            local targetPosition = enemyRootPart.CFrame + Vector3.new(0, 5, 0) -- Posição acima do inimigo
            local flySpeed = 0.5 -- Ajuste a velocidade do voo
            
            -- Loop para voar até o inimigo
            while (rootPart.Position - targetPosition.p).Magnitude > 2 do
                local newCFrame = rootPart.CFrame:Lerp(targetPosition, flySpeed)
                rootPart.CFrame = newCFrame
                task.wait() -- Espera um frame para que o loop não trave o jogo
            end
            
            print("Voou até o inimigo mais próximo: " .. enemy.Name)
        end

        -- Dispara o evento de ataque com o ID do inimigo
        local args = {
            [1] = {
                [1] = {
                    ["PetPos"] = {},
                    ["AttackType"] = "All",
                    ["Event"] = "Attack",
                    ["Enemy"] = tostring(enemy.Name) -- Usa o nome do inimigo
                },
                [2] = "\5"
            }
        }
        
        game:GetService("ReplicatedStorage").BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
        print("Evento de ataque disparado contra: " .. enemy.Name)
    else
        print("Nenhum inimigo encontrado para atacar.")
    end
end

-- Chame a função quando quiser que o ataque ocorra
-- Por exemplo, conectando a um botão de interface
-- button.MouseButton1Click:Connect(attackClosestEnemy)
