local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Allan Hub",
    SubTitle = "By Allan",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 320),
    Acrylic = true,
    Theme = "dark",
    MinimizeKey = Enum.KeyCode.End
})

local tab = Window:AddTab({
    Title = "Auto Dungeon",
    Icon = "dungeon"
})

-- Variáveis para os estados
local isDungeonActive = false
local isAutoAttackActive = false
local autoAttackLoop = nil

-- Função para detectar inimigos próximos
local function detectarInimigosProximos()
    local Players = game:GetService("Players")
    local Workspace = game:GetService("Workspace")
    local LocalPlayer = Players.LocalPlayer

    local inimigosDetectados = {}
    local meuPersonagem = LocalPlayer.Character
    if not meuPersonagem then return end

    local minhaPosicao = meuPersonagem.PrimaryPart.Position
    local distanciaMaxima = 20

    for _, objeto in ipairs(Workspace:GetChildren()) do
        -- Lógica de identificação do inimigo (substitua conforme a estrutura do seu jogo)
        if objeto.Name:find("Enemy") and objeto:IsA("Model") then
            local distancia = (objeto.PrimaryPart.Position - minhaPosicao).Magnitude
            if distancia <= distanciaMaxima then
                local enemyId = objeto:GetAttribute("EnemyId") or objeto.Name
                if enemyId then
                    table.insert(inimigosDetectados, enemyId)
                end
            end
        end
    end
    return inimigosDetectados
end

-- Função de ataque
local function atacarInimigos()
    local inimigos = detectarInimigosProximos()
    if #inimigos > 0 then
        for _, enemyId in ipairs(inimigos) do
            print("Atacando inimigo com ID:", enemyId)
            local args = {
                [1] = {
                    [1] = {
                        ["PetPos"] = {},
                        ["AttackType"] = "All",
                        ["Event"] = "Attack",
                        ["Enemy"] = enemyId
                    },
                    [2] = "\5"
                }
            }
            game:GetService("ReplicatedStorage").BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
        end
    else
        print("Nenhum inimigo a menos de 20 metros para atacar.")
    end
end

---

### **Controles da Dungeon**

-- Botão para ativar/desativar a dungeon
tab:AddToggle({
    Title = "Dungeon",
    Description = "Ativa/Desativa o sistema de criação da Dungeon",
    Default = false,
    Callback = function(value)
        isDungeonActive = value
        if isDungeonActive then
            print("Dungeon ativada!")
            local args = {
                [1] = {
                    [1] = {
                        ["Type"] = "Gems",
                        ["Event"] = "DungeonAction",
                        ["Action"] = "BuyTicket"
                    },
                    [2] = "\12",
                    [3] = {
                        ["Event"] = "DungeonAction",
                        ["Action"] = "Create"
                    },
                    [4] = "\12",
                    [5] = {
                        ["Event"] = "DungeonAction",
                        ["Action"] = "Start"
                    },
                    [6] = "\12"
                }
            }
            game:GetService("ReplicatedStorage").BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
        else
            print("Dungeon desativada!")
            -- Adicione aqui a lógica para sair ou resetar a dungeon, se necessário
        end
    end
})

---

### **Controles de Ataque Automático**

-- Botão para ativar/desativar o ataque automático
tab:AddToggle({
    Title = "Auto Ataque",
    Description = "Ativa/Desativa o ataque automático em inimigos próximos",
    Default = false,
    Callback = function(value)
        isAutoAttackActive = value
        if isAutoAttackActive then
            print("Auto ataque ativado!")
            autoAttackLoop = coroutine.wrap(function()
                while isAutoAttackActive do
                    atacarInimigos()
                    wait(1) -- Espera 1 segundo antes de atacar novamente
                end
            end)
            autoAttackLoop()
        else
            print("Auto ataque desativado!")
        end
    end
})
