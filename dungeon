-- üìå Configura√ß√£o
local ativarEvento = false
local ativarDungeon = true
local ativarGems = false
local andarEntrada = 10
local andarSaida = 1
local configFile = "allan_hub_castelo.json"
local tempFile = "temp_dungeon.json"

-- Flag para teleporte
local justTeleported = false
if isfile(tempFile) then
    justTeleported = true
    print("üìå Detectado teleporte para dungeon, n√£o criar outra.")
end

-- üîπ Salvar e carregar configura√ß√£o
local function salvarConfig()
    local data = {
        entrada = andarEntrada,
        saida = andarSaida,
        evento = ativarEvento,
        dungeon = ativarDungeon,
        gems = ativarGems
    }
    writefile(configFile, game:GetService("HttpService"):JSONEncode(data))
end

local function carregarConfig()
    if isfile(configFile) then
        local data = game:GetService("HttpService"):JSONDecode(readfile(configFile))
        andarEntrada = tonumber(data.entrada) or andarEntrada
        andarSaida = tonumber(data.saida) or andarSaida
        ativarEvento = data.evento or false
        ativarDungeon = data.dungeon or false
        ativarGems = data.gems or false
    else
        salvarConfig()
    end
end

carregarConfig()

-- üîπ Fun√ß√µes principais
local function entrarCastelo()
    local args = {
        [1] = {
            [1] = {["Check"] = true, ["Floor"] = tostring(andarEntrada), ["Event"] = "CastleAction", ["Action"] = "Join"},
            [2] = "\12"
        }
    }
    game:GetService("ReplicatedStorage").BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
    print("üè∞ Entrando no andar", andarEntrada)
end

local function sairCastelo()
    local args = {
        [1] = {
            [1] = {["Check"] = true, ["Floor"] = tostring(andarSaida), ["Event"] = "CastleAction", ["Action"] = "LeaveDungeon"},
            [2] = "\12"
        }
    }
    game:GetService("ReplicatedStorage").BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
    print("üö™ Saindo no andar", andarSaida)
    if isfile(tempFile) then delfile(tempFile) end
end

local function iniciarDungeon()
    local args = {
        [1] = {
            [1] = {["Event"] = "DungeonAction", ["Action"] = "Start"},
            [2] = "\12"
        }
    }
    game:GetService("ReplicatedStorage").BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
    print("‚ñ∂ Iniciando a dungeon.")
end

local function criarDungeon()
    if isInDungeon() then
        print("‚ö† J√° dentro de uma dungeon, n√£o criar outra!")
        return
    end
    local args = {
        [1] = {
            [1] = {["Event"] = "DungeonAction", ["Action"] = "Create"},
            [2] = "\12"
        }
    }
    game:GetService("ReplicatedStorage").BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
    print("‚úî Dungeon criada.")
    writefile(tempFile, "1") -- Marca dungeon ativa
    task.wait(3)
    iniciarDungeon()
end

local function resetarDungeon()
    local args = {
        [1] = {
            [1] = {["Type"] = "Gems", ["Event"] = "DungeonAction", ["Action"] = "BuyTicket"},
            [2] = "\12"
        }
    }
    game:GetService("ReplicatedStorage").BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
    print("‚ôªÔ∏è Dungeon resetada com Gems.")
    if isfile(tempFile) then delfile(tempFile) end
end

-- üîπ Fun√ß√µes de combate
local function mobsVivos()
    local mobsFolder = workspace:FindFirstChild("__Enemies")
    if mobsFolder then
        for _, mob in pairs(mobsFolder:GetChildren()) do
            if mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                return true
            end
        end
    end
    return false
end

local function atacarInimigos()
    local mobsFolder = workspace:FindFirstChild("__Enemies")
    if not mobsFolder then return end
    for _, mob in ipairs(mobsFolder:GetChildren()) do
        if mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
            local args = {
                [1] = {
                    [1] = {
                        ["Event"] = "Attack",
                        ["Enemy"] = mob.Name,
                        ["AttackType"] = "All"
                    },
                    [2] = "\5"
                }
            }
            game:GetService("ReplicatedStorage").BridgeNet2.dataRemoteEvent:FireServer(unpack(args))
            task.wait(0.15) -- Pausa pequena
        end
    end
end

local function solarDungeon()
    while mobsVivos() do
        atacarInimigos()
        task.wait(0.5)
    end
    print("‚úî Todos os mobs foram mortos!")
end

local function isInDungeon()
    return workspace:FindFirstChild("__Enemies") ~= nil
end

-- üîπ Loop principal Auto Dungeon
local function autoDungeonLoop()
    while ativarDungeon do
        task.wait(3)

        -- Evita recriar dungeon ap√≥s teleporte
        if not justTeleported and not isInDungeon() then
            if ativarEvento then
                entrarCastelo()
                task.wait(5)
            end
            criarDungeon()
            task.wait(5)
        end
        justTeleported = false

        -- Solar mobs
        if isInDungeon() then
            print("‚öîÔ∏è Solando dungeon...")
            solarDungeon()

            if ativarGems then
                resetarDungeon()
                task.wait(3)
            else
                sairCastelo()
                task.wait(3)
                entrarCastelo()
                task.wait(3)
            end
        end
    end
end

-- üîπ Inicia loop
task.spawn(autoDungeonLoop)